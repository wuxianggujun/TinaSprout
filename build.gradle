buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://repo.huaweicloud.com/repository/maven/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.4")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4' apply false
    //apply false的作用是告诉Gradle不要执行插件的逻辑，只是声明依赖
    id 'io.spring.dependency-management' version '1.1.0'
}

/*
bootJar {
    archiveBaseName = 'TinaSprout'
    archiveVersion = '0.0.1-SNAPSHOT'
    // 包括所有依赖项和子模块
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    // 将子模块一起打包进来
    includeEmptyDirs = true
    // 设置输出目录，相对于项目根目录
    destinationDirectory = file("$buildDir/libs")
}

springBoot {
    mainClass = 'com.wuxianggujun.tinasproutrobot.TinasproutRobotApplication'
}
*/

allprojects {
    apply plugin: 'java'

    group 'com.wuxianggujun'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven {
            url 'https://repo.huaweicloud.com/repository/maven/'
        }
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {

        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.0.4"
        }

    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation "com.alibaba:fastjson:1.2.83"
        implementation 'io.netty:netty-all:4.1.86.Final'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }


}